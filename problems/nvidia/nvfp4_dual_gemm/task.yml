# name: nvfp4-dual-gemm

files:
  - {"name": "submission.py", "source": "@SUBMISSION@"}
  - {"name": "task.py", "source": "task.py"}
  - {"name": "utils.py", "source": "../utils.py"}
  - {"name": "reference.py", "source": "reference.py"}
  - {"name": "eval.py", "source": "../eval.py"}

lang: "py"

description: |
  
  You will implement a block scaled dual matrix-matrix multiplication kernel with silu activation optimized for NVIDIA B200.
  To be explicit, you will be given a tuple of tensors:
  ```
  (a, b1, b2, sfa, sfb1, sfb2, c)
  ```
  where:
  * `a` is M x K x L in K-major order in nvfp4(e2m1)
  * `b1` is N x K x L in K-major order in nvfp4(e2m1)
  * `b2` is N x K x L in K-major order in nvfp4(e2m1)
  * `sfa` is M x (K // 16) x L in K-major order in fp8(e4m3fnuz)
  * `sfb1` is N x (K // 16) x L in K-major order in fp8(e4m3fnuz)
  * `sfb2` is N x (K // 16) x L in K-major order in fp8(e4m3fnuz)
  * `c` is M x N x L in fp16
  
  Matrix sizes `M` is divisible by mma_tiler_mn[0], `N` is divisible by mma_tiler_mn[1], `K` is divisible by 256.
  The ranking criteria is the geometric mean of the benchmark results.
  For the grand price, your kernel will be evaluated against the speed of light analysis
  and the solution closest to the speed of light will be awarded the grand price.
  ```
  The speed of light analysis based on the max(FP4 Tensor Core math throughput, DRAM memory throughput) of B200 and tested under 1.5Ghz clock:
    M   N   K   L time[us] 
  128 4096 7168 1 4.505
  512 4096 7168 1 8.714
  128 3072 4096 1 1.984
  512 3072 7168 1 6.535
  ```
config:
  main: "eval.py"

templates:
  Python: "template.py"

tests:
  - {"m": 128, "n": 256, "k": 256, "l": 1, "seed": 1111}
  - {"m": 128, "n": 1536, "k": 7168, "l": 1, "seed": 1111}
  - {"m": 128, "n": 3072, "k": 1536, "l": 1, "seed": 1111}
  - {"m": 256, "n": 7168, "k": 256, "l": 1, "seed": 1111}
  - {"m": 256, "n": 7168, "k": 2048, "l": 1, "seed": 1111}
  - {"m": 2304, "n": 4608, "k": 7168, "l": 1, "seed": 1111}
  - {"m": 384, "n": 7168, "k": 2304, "l": 1, "seed": 1111}
  - {"m": 512, "n": 512, "k": 7168, "l": 1, "seed": 1111}
  - {"m": 512, "n": 4096, "k": 512, "l": 1, "seed": 1111}
  - {"m": 512, "n": 1536, "k": 7168, "l": 1, "seed": 1111}

benchmarks:
  - {"m": 7168, "n": 128, "k": 16384, "l": 1, "seed": 1111}
  - {"m": 4096, "n": 128, "k": 7168, "l": 1, "seed": 1111}
  - {"m": 7168, "n": 128, "k": 2048, "l": 1, "seed": 1111}

ranking_by: "geom"