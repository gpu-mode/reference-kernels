# name: nvfp4-block-scaled-gemm

files:
  - {"name": "submission.py", "source": "@SUBMISSION@"}
  - {"name": "task.py", "source": "task.py"}
  - {"name": "utils.py", "source": "../utils.py"}
  - {"name": "reference.py", "source": "reference.py"}
  - {"name": "eval.py", "source": "../eval.py"}

lang: "py"

description: |
  
  You will implement a block scaled group matrix-matrix multiplication kernel optimized for NVIDIA B200.
  To be explicit, you will be given a tuple of tensors:
  ```
  (abc_tensors, sfasfb_tensors, problem_sizes)
  ```
  where:
  * `abc_tensors` is list of tuples (a, b, c) where 
    a is torch.Tensor[float4e2m1fn_x2] of shape [M, K // 2, L]
    b is torch.Tensor[float4e2m1fn_x2] of shape [N, K // 2, L]
    c is torch.Tensor[float16] of shape [M, N, L]
  * `sfasfb_tensors` is list of tuples (sfa, sfb) where 
    sfa is torch.Tensor[float8_e4m3fnuz] of shape [M, K // 16, L]
    sfb is torch.Tensor[float8_e4m3fnuz] of shape [N, K // 16, L]
  * `problem_sizes` is list of tuples (M, N, K, L)
  
  Each group's matrix sizes `M` is divisible by mma_tiler_mn[0], `N` is divisible by mma_tiler_mn[1], `K` is divisible by 256.
  The ranking criteria is the geometric mean of the benchmark results.
  For the grand price, your kernel will be evaluated against the speed of light analysis
  and the solution closest to the speed of light will be awarded the grand price.
  ```
  The speed of light analysis based on the max(FP4 Tensor Core math throughput, DRAM memory throughput) of B200 and tested under 1.5Ghz clock:
  G  M    N    K  L time[us]
  8 128 4096 7168 1 18.833
  8 128 7168 2048 1 10.667
  2 256 3072 4096 1 2.406
  2 256 4096 1536 1 1.525
  ```
config:
  main: "eval.py"

templates:
  Python: "template.py"

tests:
  - {"m": 128, "n": 256, "k": 512, "g": 8, "seed": 1111}
  - {"m": 128, "n": 256, "k": 512, "g": 2, "seed": 1111}
  - {"m": 128, "n": 384, "k": 640, "g": 3, "seed": 1111}
  - {"m": 256, "n": 384, "k": 640, "g": 4, "seed": 1111}
  - {"m": 256, "n": 512, "k": 384, "g": 2, "seed": 1111}
  - {"m": 384, "n": 512, "k": 384, "g": 2, "seed": 1111}
  - {"m": 384, "n": 640, "k": 512, "g": 2, "seed": 1111}
  - {"m": 256, "n": 640, "k": 128, "g": 8, "seed": 1111}
  - {"m": 512, "n": 768, "k": 256, "g": 5, "seed": 1111}
  - {"m": 512, "n": 768, "k": 768, "g": 3, "seed": 1111}

benchmarks:
  - {"m": 4096, "n": 128, "k": 7168, "g": 8, "seed": 1111}
  - {"m": 7168, "n": 128, "k": 2048, "g": 8, "seed": 1111}
  - {"m": 3072, "n": 256, "k": 4096, "g": 2, "seed": 1111}
  - {"m": 4096, "n": 256, "k": 1536, "g": 2, "seed": 1111}

ranking_by: "geom"
